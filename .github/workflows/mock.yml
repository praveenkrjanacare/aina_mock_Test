name: Run Appium Tests on Emulator

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Appium Test on Android Emulator
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Maven
        run: sudo apt-get install -y maven

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept licenses and install emulator tools
        env:
          ANDROID_AVD_HOME: $HOME/.android/avd
        run: |
          yes | sdkmanager --licenses
          sdkmanager --install "platforms;android-30" "platform-tools" "emulator" "system-images;android-30;google_apis;x86_64"
          mkdir -p ~/.android/avd
          echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86_64" --device "pixel" --force
          ${ANDROID_SDK_ROOT}/emulator/emulator -avd test -no-window -no-audio -no-boot-anim -no-snapshot-save &
          sleep 5

      - name: Add ADB to PATH
        run: echo "${ANDROID_SDK_ROOT}/platform-tools" >> $GITHUB_PATH

      - name: Wait for Emulator to Fully Boot
        run: |
          echo "Waiting for emulator to stabilize..."
          adb wait-for-device
          boot_completed=""
          timeout=120
          elapsed=0
          until [[ "$boot_completed" == "1" || $elapsed -ge $timeout ]]; do
            boot_completed=$(adb shell getprop sys.boot_completed | tr -d '\r')
            sleep 2
            elapsed=$((elapsed + 2))
          done
          if [[ "$boot_completed" != "1" ]]; then
            echo "Emulator failed to boot in $timeout seconds"
            exit 1
          fi
          echo "Emulator booted."

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Appium and drivers
        run: |
          npm install -g appium
          appium driver install uiautomator2
          appium --base-path /wd/hub > appium.log 2>&1 &
          sleep 5

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Run Appium Tests
        run: mvn clean test -Dsurefire.suiteXmlFiles=testng.xml

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports/
